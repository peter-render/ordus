unit fjobblista;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, fStdRV, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Menus, Vcl.DBCtrls,
  Vcl.StdCtrls, Vcl.Grids, Vcl.wwdbigrd, Vcl.wwdbgrid, Vcl.ExtCtrls,
  Vcl.Wwdbdatetimepicker, Vcl.wwdblook, Vcl.Mask;

type
  TfrmJobblista = class(TfrmStdRV)
    FDQuery1Id: TFDAutoIncField;
    FDQuery1PersonalId: TIntegerField;
    FDQuery1Arbete: TStringField;
    FDQuery1Prio: TByteField;
    FDQuery1KlartSenast: TSQLTimeStampField;
    FDQuery1Utförtdatum: TSQLTimeStampField;
    FDQuery1Förnamn: TStringField;
    FDQuery1Efternamn: TStringField;
    FDQuery1Namn: TStringField;
    Label1: TLabel;
    DBEdit1: TDBEdit;
    wwDBLookupCombo1: TwwDBLookupCombo;
    Label2: TLabel;
    Label3: TLabel;
    wwDBDateTimePicker1: TwwDBDateTimePicker;
    DBComboBox1: TDBComboBox;
    Label4: TLabel;
    Label5: TLabel;
    btnKlar: TButton;
    CheckBox1: TCheckBox;
    abortklarmarkering1: TMenuItem;
    procedure FormShow(Sender: TObject);
    procedure btnSparaClick(Sender: TObject);
    procedure btnNyClick(Sender: TObject);
    procedure dbGridTitleButtonClick(Sender: TObject; AFieldName: string);
    procedure FormCreate(Sender: TObject);
    procedure btnKlarClick(Sender: TObject);
    procedure Visa_klarmarkerade(Sender: TObject);
    procedure abortklarmarkering1Click(Sender: TObject);
    procedure btnAngraClick(Sender: TObject);
    procedure btnAndraClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmJobblista: TfrmJobblista;
  tsql: string;
  ascending: boolean;
  sortcol: string;

implementation

{$R *.dfm}

uses Datamodule, funclib;

procedure TfrmJobblista.abortklarmarkering1Click(Sender: TObject);
begin
  inherited;
  with fdquery1 do
  begin
    edit;
    fieldbyname('Utförtdatum').Value:= null;
    post;
    close;
    open;
  end;


end;

procedure TfrmJobblista.btnNyClick(Sender: TObject);
begin
  inherited;
  DBEdit1.SetFocus;

    btnKlar.enabled:= not (fdquery1.state in [dsEdit,dsInsert])

end;

procedure TfrmJobblista.btnSparaClick(Sender: TObject);
begin
  inherited;
  fdquery1.Close;
  fdquery1.Open;
   btnKlar.enabled:= not (fdquery1.state in [dsEdit,dsInsert])

end;

procedure TfrmJobblista.btnAndraClick(Sender: TObject);
begin
  inherited;
    btnKlar.enabled:= not (fdquery1.state in [dsEdit,dsInsert])

end;

procedure TfrmJobblista.btnAngraClick(Sender: TObject);
begin
  inherited;
    btnKlar.enabled:= not (fdquery1.state in [dsEdit,dsInsert])

end;

procedure TfrmJobblista.btnKlarClick(Sender: TObject);
begin
  inherited;
  if MessageDlg('Vill du klarmarkera "' + fdquery1.fieldbyname('Arbete').asstring + '"?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then

  with fdquery1 do
  begin
    edit;
    fieldbyname('Utförtdatum').Value:= now;
    post;
    close;
    open;
  end;

end;

procedure TfrmJobblista.dbGridTitleButtonClick(Sender: TObject;
  AFieldName: string);
var
  sstr: string;
begin

  inherited;
  if sortcol <> AFieldName then
    ascending := false;
  sortcol := AFieldName;

  ascending := not ascending;
  if AFieldName = 'Prio' then
    sstr := 'Order by Prio'
  ELSE if AFieldName = 'Arbete' then
    sstr := 'Order by Arbete' else
  if AFieldName = 'Namn' then
    sstr := 'Order by Namn'
  else if AFieldName = 'KlartSenast' then
    sstr := 'Order by Klartsenast'
  else if AFieldName = 'Utförtdatum' then
    sstr := 'Order by Utförtdatum'
  else
    sstr := '';

  fdquery1.Close;
  fdquery1.sql.Clear;
  fdquery1.sql.Add(tsql);

  if sstr <> '' then

    fdquery1.sql.Add(' ' + sstr + ' '+ iif(ascending, 'asc', 'desc')+ iif((afieldname <> 'KlartSenast'),', Klartsenast ',' ') );

  // showmessage(fdquery1.sql.Text);
  fdquery1.parambyname('VISAUTFÖRT').value := false;
  fdquery1.Open;

end;

procedure TfrmJobblista.FormCreate(Sender: TObject);
begin
  inherited;
  ascending := false;
end;

procedure TfrmJobblista.FormShow(Sender: TObject);
begin
  inherited;

  dm.qryLU_personal.Open;
  tsql := fdquery1.sql.text;
  fdquery1.close;
  fdquery1.sql.add(' Order by Prio asc');
  fdquery1.open;


end;

procedure TfrmJobblista.Visa_klarmarkerade(Sender: TObject);
begin
  inherited;
  with fdquery1 do
  begin
    close;
    parambyname('VISAUTFÖRT').value := checkbox1.Checked;
    Open;
  end;


end;

end.
